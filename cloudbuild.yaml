# Google Cloud Build configuration for FormatNormalizer

steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${PROJECT_ID}/format-normalizer:${SHORT_SHA}', '.']

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/format-normalizer:${SHORT_SHA}']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'format-normalizer-api'
      - '--image=gcr.io/${PROJECT_ID}/format-normalizer:${SHORT_SHA}'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--timeout=600s'
      - '--set-env-vars=GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},FIRESTORE_COLLECTION=${_FIRESTORE_COLLECTION},CLOUD_RUN=true'
      - '--set-secrets=GEMINI_API_KEY=gemini-api-key:latest'

  # Deploy Cloud Functions
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd functions/normalize_media && \
        gcloud functions deploy normalize-media \
          --runtime=python39 \
          --memory=2048MB \
          --timeout=540s \
          --trigger-http \
          --entry-point=normalize_media \
          --set-env-vars=GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},FIRESTORE_COLLECTION=${_FIRESTORE_COLLECTION} \
          --set-secrets=GEMINI_API_KEY=projects/${PROJECT_ID}/secrets/gemini-api-key/versions/latest

  # Deploy batch processor function
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd functions/batch_processor && \
        gcloud functions deploy batch-processor \
          --runtime=python39 \
          --memory=4096MB \
          --timeout=540s \
          --trigger-topic=format-normalizer-batch-jobs \
          --entry-point=batch_processor \
          --set-env-vars=GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},FIRESTORE_COLLECTION=${_FIRESTORE_COLLECTION} \
          --set-secrets=GEMINI_API_KEY=projects/${PROJECT_ID}/secrets/gemini-api-key/versions/latest

# Add latest tag to image
images:
  - 'gcr.io/${PROJECT_ID}/format-normalizer:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/format-normalizer:latest'

# Substitution variables
substitutions:
  _GCS_BUCKET_NAME: 'format-normalizer-media'
  _FIRESTORE_COLLECTION: 'normalization_jobs'